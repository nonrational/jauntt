<section class="room-header">
  <div class="user-display">
    <div class="name">
      <%= render 'users/name' %>
    </div>

    <div class="user-language">
      <%= render 'users/language' %>
    </div>
  </div>

  <div class="room-info">
    <%= render 'room_members/index' %>
  </div>
</section>

<section class="messages">
  <div class="scroll">
    <ul id="messages">
    </ul>
  </div>
</section>

<section class="message-input" id="message_create_form">
  <%= render 'messages/form' %>
<p>Copy this link to invite: http://samandmoore.koding.io<%= room_path %></p>
</section>


<%= content_for :javascript do %>
<script src="https://pubnub.a.ssl.fastly.net/pubnub.min.js"></script>
<script>
  (function() {
    WebSocket = PUBNUB.ws;
    var $messages = $('#messages');
    var socket = new WebSocket('wss://pubsub.pubnub.com/demo/demo/<%= @room.id %>');
    var currentUserId = '<%= current_user.id %>';
    var colors = [
      '#ff00ff',
      '#00ffff',
      '#00ff00',
      '#ffff00',
      '#ff0000',
      '#0000ff',
      '#7920FF',
      '#FD0987',
      '#FF3300',
      '#49D3F2',
      '#D2691E',
      '#CE3977',
      '#33A1C9',
      '#FFDB00',
      '#09A9B2',
      '#8C92AC',
      '#87A96B',
      '#43CD80',
      '#FFA500',
      '#FF82AB'
    ];

    function getColorForSender(data) {
      return colors[parseInt(md5(data.sender_id).substring(0,8),16) % colors.length];
    }

    var tmpl = {
      sender: function(data) {
        var senderInitial = (data.sender_name || '?').charAt(0),
            $senderElement = $('<figure/>').addClass('message-sender'),
            $userIcon = $('<div/>').css('background-color', getColorForSender(data)).text(senderInitial),
            $userName = $('<figcaption>').text(data.sender_name || '?');

        $senderElement.append($userIcon).append($userName);

        return $senderElement;
      },
      messageBody: function(data) {
        return $('<div/>')
          .addClass('message-body')
          .text(data.message[currentLanguage()])
          .attr('title', data.source_language + ' -> ' + data.original_text);
      },
      message: function(data) {
        var $li = $("<li/>").append(this.sender(data)).append(this.messageBody(data));

        if (data.sender_id === currentUserId) {
          $li.addClass('me');
        }

        return $li;
      }
    };

    function currentLanguage() {
      return $('#user_language').val();
    }

    socket.onmessage = function(evt) {
      console.log('message received', evt.data);
      $messages.append(tmpl.message(evt.data));

      var $scroller = $('.messages .scroll');

      $scroller.scrollTop($scroller[0].scrollHeight);
    }

    socket.onclose = function() {
    }

    socket.onerror = function() {
    }

    socket.onopen = function(evt) {
    }

    socket.onsend = function(evt) {
    }

    setInterval(function() {
      $.get('<%= room_members_path(@room) %>')
    }, <%= RoomPresence::TIMEOUT * 500 %>);
  })();

  $(document).on('click', '.room-info p', function() {
      open = $('.members').is(':visible');
      $('.members').slideToggle(!open);
  });

  $('#message_create_form form').on('ajax:success', function() {
    $('#message_text').focus();
  });
</script>
<% end %>
